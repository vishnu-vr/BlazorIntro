@page "/"
@using System.Security.Claims;
@using Common;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<div style="margin-bottom:20px">
    Welcome to your new app.
</div>

@*<SurveyPrompt Title="How is Blazor working for you?" />*@

@*THIS CAN BE A WRAPPER COMPONENT*@

<style>
    .class1 {
        border: 2px solid;
        padding: 10px;
        box-shadow: 6px 4px 8px -2px;
        margin-bottom: 10px
    }
</style>

<div class="class1">
    <AuthorizeView Roles="superamdin">
        <Authorized>
            <h4><b>This is a super admin component</b></h4>
            <MyRazorClassLibrary.Component1 ContextDataModel="@contextDataModel" />
        </Authorized>
        <NotAuthorized>
            <h4><b>This is a super admin component</b></h4>
            <h5>Authorization Failure!</h5>
            <p>You're not a super admin</p>
        </NotAuthorized>
    </AuthorizeView>
</div>


<div class="class1">
    <AuthorizeView Roles="administrator, superamdin">
        <Authorized>
            <h4><b>This is an admin component</b></h4>
            <MyRazorClassLibrary.Component1 ContextDataModel="@contextDataModel" />
        </Authorized>
        <NotAuthorized>
            <h4><b>This is an admin component</b></h4>
            <h5>Authorization Failure!</h5>
            <p>You're not an admin</p>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    private ContextDataModel? contextDataModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            contextDataModel = new ContextDataModel
            {
                Application = "Unify-some-guid",
                Organization = "Unify-some-organization",
                User = new User
                {
                    Access = "level-1",
                    Name = user.Identity.Name,
                    UserId = user.Identity.Name,
                }
            };
        }
    }
}